angular.module('test', ['ngRoute', 'ngResource', 'ui.bootstrap'])
	.config(function ($routeProvider) {
		'use strict';

		var mainConfig = {
			controller: 'MainController',
			templateUrl: './partials/main.html',
			resolve: {
				store: function (RecordStorage) {
					RecordStorage.get();
					return RecordStorage;
				}
			}
		};

		$routeProvider
		.when('/', mainConfig)
		.otherwise({redirectTo:'/'});
});
angular.module('test')
	.controller('MainController', function ($scope, $routeParams, store, $modal) {
		'use strict';

		$scope.$modal = $modal;
		$scope.store = store;
		$scope.record = {
			name: '',
			email: ''
		}
		$scope.recordToChange = {};
		$scope.$watch(function(){
			$scope.recordsCount = $scope.records.length;
		});
		var records = $scope.records = store.records;

		$scope.loadUpdateModal = function(record){
			$scope.recordToChange = record;
			$scope.$modal.open({
				templateUrl: '/partials/modals/update-record-modal.html',
				scope: $scope
			});
		}

		$scope.loadAddingModal = function(){
			$scope.$modal.open({
				templateUrl: '/partials/modals/add-record-modal.html',
				scope: $scope
			});
		}

		$scope.loadDeletingModal = function(record){
			$scope.recordToChange = record;
			$scope.$modal.open({
				templateUrl: '/partials/modals/delete-record-modal.html',
				scope: $scope
			});
		}

		$scope.addRecord = function(){
			var record = {
				name: $scope.record.name.trim(),
				email: $scope.record.email
			};

			if (!record.name || !record.email) {
				return;
			}

			$scope.store.insert(record)
				.then(function(){
					$scope.record = {
						name: '',
						email: ''
					}
				})
				.finally(function(){
					// some final action
				})
		}
		
		$scope.deleteRecord = function(){
			$scope.store.delete($scope.recordToChange);
		}

		$scope.updateRecord = function(){
			$scope.store.update($scope.recordToChange, $scope.records.indexOf($scope.recordToChange));
		}
});

angular.module("test")
.factory("RecordStorage", function($q){
	this.storageID = 'records';
	var store = this.store = {
		records: [],

		_saveToLS: function (records) {
			localStorage.setItem(this.storageID, JSON.stringify(records));
		},

		_getFromLS: function () {
			return JSON.parse(localStorage.getItem(this.storageID) || '[]');
		},

		get: function(){
			var deferred = $q.defer();
			angular.copy(store._getFromLS(), store.records);
			deferred.resolve(this.records);

			return deferred.promise;
		},

		insert: function(record){
			var deferred = $q.defer();
			this.records.push(record);
			store._saveToLS(this.records);
			deferred.resolve(this.records);

			return deferred.promise;
		},

		delete: function(record){
			var deferred = $q.defer();
			this.records.splice(this.records.indexOf(record), 1);
			store._saveToLS(this.records);
			deferred.resolve(this.records);

			return deferred.promise;
		},

		update: function(record, index){
			var deferred = $q.defer();
			this.records[index] = record;
			store._saveToLS(this.records);
			deferred.resolve(this.records);

			return deferred.promise;
		}
	}

	return store;
});

